{"version":3,"sources":["components/Ocean.js","components/Linechart.js","components/GraphDrawer.js","components/AboutDrawer.js","components/Dashboard.js","components/BgParticles.js","App.js","serviceWorker.js","index.js"],"names":["Ocean","sealevel","className","style","height","this","getPercentage","props","React","Component","dataSrc","require","colors","console","log","keys","data","labels","Object","datasets","label","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","values","map","curr","data2","data3","Linechart","state","showLabelX","showLabelY","onChangeShowX","setState","onChangeShowY","options","legend","display","position","scales","yAxes","scaleLabel","ticks","minRotation","xAxes","gridLines","width","redraw","ref","GraphDrawer","visible","showDrawer","onClose","margin","type","onClick","title","placement","closable","AboutDrawer","href","Dashboard","opacity","theme","value","temp","max","steps","format","size","marginTop","co2","bottom","left","right","BgParticles","params","class","initialYear","marks","1993","2000","2010","2019","App","onYearChange","year","parseFloat","arctic","greenland","setBackgroundColor","bind","bcolor","document","getElementsByTagName","min","defaultValue","onChange","justify","span","textAlign","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.95b9733a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Ocean.css\";\r\n\r\nclass Ocean extends React.Component {\r\n    getPercentage (sealevel) {\r\n        return (sealevel + 37.55)/160 * 100 + \"%\"\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"ocean\" style={{ height: this.getPercentage(this.props.sealevel) }}>\r\n                <p className=\"des\">Sea Level: {this.props.sealevel}mm</p>\r\n                <div className=\"wave\"></div>\r\n                <div className=\"wave\"></div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Ocean","import React from \"react\"; \r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n\r\nconst dataSrc = require('../static/nasa_data.json');\r\nconst colors = [\"#78ce90\", \"#b977ce\", \"#fac76e\", \"#de4d4d\"];\r\n\r\nconsole.log(dataSrc);\r\n\r\nconsole.log(dataSrc.keys);\r\n\r\nconst data = {\r\n    labels : Object.keys(dataSrc),\r\n    datasets : [\r\n        {\r\n            label: 'Year',\r\n            fill: false,\r\n            lineTension: 0.1,\r\n            backgroundColor: colors,\r\n            borderColor: 'rgba(75,192,192,1)',\r\n            borderCapStyle: 'butt',\r\n            borderDash: [],\r\n            borderDashOffset: 0.0,\r\n            borderJoinStyle: 'miter',\r\n            pointBorderColor: 'rgba(75,192,192,1)',\r\n            pointBackgroundColor: '#fff',\r\n            pointBorderWidth: 10,\r\n            pointHoverRadius: 50,\r\n            pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n            pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n            pointHoverBorderWidth: 2,\r\n            pointRadius: 0.3,\r\n            pointHitRadius: 6,\r\n           data : Object.values(dataSrc).map(curr => curr[\"sealevel\"]), \r\n        },\r\n    ],\r\n};\r\n\r\n\r\n\r\nconst data2 = {\r\n  labels : Object.keys(dataSrc),\r\n  \r\n  \r\n  datasets : [\r\n      {\r\n          label: 'Year',\r\n          fill: false,\r\n          lineTension: 0.1,\r\n          backgroundColor: colors,\r\n          borderColor: 'rgba(75,192,192,1)',\r\n          borderCapStyle: 'butt',\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: 'miter',\r\n          pointBorderColor: 'rgba(75,192,192,1)',\r\n          pointBackgroundColor: '#fff',\r\n          pointBorderWidth: 10,\r\n          pointHoverRadius: 50,\r\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n        \r\n          data : Object.values(dataSrc).map(curr => curr[\"temp\"])\r\n      },\r\n  ],\r\n};\r\n\r\nconst data3 = {\r\n  labels : Object.keys(dataSrc),\r\n  \r\n  \r\n  datasets : [\r\n      {\r\n          label: 'Year',\r\n          fill: false,\r\n          lineTension: 0.1,\r\n          backgroundColor: colors,\r\n          borderColor: 'rgba(75,192,192,1)',\r\n          borderCapStyle: 'butt',\r\n          borderDash: [],\r\n          borderDashOffset: 0.0,\r\n          borderJoinStyle: 'miter',\r\n          pointBorderColor: 'rgba(75,192,192,1)',\r\n          pointBackgroundColor: '#fff',\r\n          pointBorderWidth: 10,\r\n          pointHoverRadius: 50,\r\n          pointHoverBackgroundColor: 'rgba(75,192,192,1)',\r\n          pointHoverBorderColor: 'rgba(220,220,220,1)',\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 1,\r\n          pointHitRadius: 10,\r\n        \r\n          data : Object.values(dataSrc).map(curr => curr[\"co2\"])\r\n      },\r\n  ],\r\n};\r\n\r\nconst getOptions = (showLabelX, showLabelY) => {\r\n  return {\r\n    legend: {\r\n      display: true,\r\n      position: \"right\"\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          scaleLabel: {\r\n            display: true\r\n          },\r\n          ticks: {\r\n            display: showLabelX ? true : false,\r\n            minRotation: 0\r\n          }\r\n        }\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false\r\n          },\r\n          scaleLabel: {\r\n            display: true\r\n          },\r\n          ticks: {\r\n            display: showLabelY ? true : false,\r\n            minRotation: 0\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  };\r\n};\r\n\r\n\r\nclass Linechart extends React.Component{\r\n    state = { showLabelX: true, showLabelY: true };\r\n\r\n    \r\n    onChangeShowX = () => this.setState({ showLabelX: !this.state.showLabelX });\r\n    onChangeShowY = () => this.setState({ showLabelY: !this.state.showLabelY });\r\n\r\n    render() {\r\n      const options = getOptions(this.state.showLabelX, this.state.showLabelY);\r\n      return (\r\n        <div>\r\n          <h2>Sea Level Changes</h2>\r\n          <Line data={data} width={100} height={50}\r\n            options={options}\r\n            redraw={true}\r\n            ref=\"chart\"\r\n          />\r\n          <h2>Temperature Changes</h2>\r\n          <Line data={data2} width={100} height={50}\r\n            options={options}\r\n            redraw={true}\r\n          />\r\n          \r\n          <h2>CO2 Changes</h2>\r\n          <Line data={data3} width={100} height={50}\r\n            options={options}\r\n            redraw={true}\r\n          />\r\n\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Linechart;","import React from \"react\";\r\nimport { Drawer, Button } from 'antd';\r\nimport Linechart from \"./Linechart\";\r\n\r\nclass GraphDrawer extends React.Component {\r\n  state = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ margin: \"2em\" }}>\r\n        <Button type=\"primary\" onClick={this.showDrawer}>\r\n          Data\r\n        </Button>\r\n        <Drawer\r\n          title=\"Data Visualization\"\r\n          placement=\"right\"\r\n          closable={true}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n          width=\"700\"\r\n        >\r\n          <Linechart />\r\n\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ReactDOM.render(<lineDrawer />, mountNode);\r\n\r\nexport default GraphDrawer;","import React from \"react\";\r\nimport { Drawer, Button } from 'antd';\r\nclass AboutDrawer extends React.Component {\r\n  state = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ margin: \"2em\" }}>\r\n        <Button type=\"primary\" onClick={this.showDrawer}>\r\n          About\r\n        </Button>\r\n        <Drawer\r\n          title=\"About\"\r\n          placement=\"right\"\r\n          closable={true}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n          width=\"350\"\r\n        >\r\n            <p>This project is developed during 2019 NASA’s International Space Apps Challenge,\r\n                by Sitong Liu and Yankun Shen.\r\n            </p>\r\n            <p><a href=\"https://github.com/liust97/sea-level-visual\">Github Link</a></p>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// ReactDOM.render(<lineDrawer />, mountNode);\r\n\r\nexport default AboutDrawer;","import React from \"react\";\r\nimport Thermometer from 'react-thermometer-component'\r\nimport { Card } from 'antd';\r\n\r\nclass Dashboard extends React.Component {\r\n    render() {\r\n        return (\r\n            <div style={{ margin: \"2.5em\" }}>\r\n                <div style={{ opacity: 0.7 }}>\r\n                    <Thermometer\r\n                        theme=\"light\"\r\n                        value={this.props.temp}\r\n                        max=\"1.0\"\r\n                        steps=\"0.01\"\r\n                        format=\"°C\"\r\n                        size=\"large\"\r\n                    />\r\n                    </div>\r\n                <Card style={{ marginTop: 50, backgroundColor: \"rgba(255,255,255,0.5)\", width: \"9em\" }} size=\"small\" title=\"Carbon Dioxide\">\r\n                    <p>{this.props.co2}ppm</p>\r\n                </Card>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Dashboard;","import Particles from 'react-particles-js';\r\nimport React from \"react\";\r\n\r\n\r\nconst style = {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"absolute\",\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0\r\n}\r\n\r\nclass BgParticles extends React.Component {\r\n\r\n\r\n    // componentDidUpdate () {\r\n    //     console.log(this.state.co2)\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Particles\r\n                    params={{\r\n                        \"particles\": {\r\n                            \"number\": {\r\n                                \"value\": (this.props.co2 - 354) * 10,\r\n                                \"density\": {\r\n                                    \"enable\": false\r\n                                }\r\n                            },\r\n                            \"size\": {\r\n                                \"value\": 3,\r\n                                \"random\": true,\r\n                                \"anim\": {\r\n                                    \"speed\": 4,\r\n                                    \"size_min\": 0.3\r\n                                }\r\n                            },\r\n                            \"line_linked\": {\r\n                                \"enable\": false\r\n                            },\r\n                            \"move\": {\r\n                                \"random\": true,\r\n                                \"speed\": 1,\r\n                                \"direction\": \"top\",\r\n                                \"out_mode\": \"out\"\r\n                            }\r\n                        },\r\n                        \"interactivity\": {\r\n                            \"events\": {\r\n                                \"onhover\": {\r\n                                    \"enable\": true,\r\n                                    \"mode\": \"bubble\"\r\n                                },\r\n                                \"onclick\": {\r\n                                    \"enable\": true,\r\n                                    \"mode\": \"bubble\"\r\n                                }\r\n                            },\r\n                            \"modes\": {\r\n                                \"bubble\": {\r\n                                    \"distance\": 250,\r\n                                    \"duration\": 2,\r\n                                    \"size\": 5,\r\n                                    \"opacity\": 0.5\r\n                                },\r\n                                \"repulse\": {\r\n                                    \"distance\": 400,\r\n                                    \"duration\": 4\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    }\r\n                    class=\"parts\"\r\n                    ref='parts'\r\n                    style={style}>\r\n                </Particles>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BgParticles;","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Ocean from \"./components/Ocean\";\r\nimport { Slider, Row, Col } from 'antd';\r\nimport GraphDrawer from \"./components/GraphDrawer\";\r\nimport AboutDrawer from \"./components/AboutDrawer\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport BgParticles from \"./components/BgParticles\"\r\n\r\nconst data = require('./static/nasa_data.json');\r\nconst initialYear = 2019\r\nconst marks = {\r\n  1993: '1993',\r\n  2000: '2000',\r\n  2010: '2010',\r\n  2019: {\r\n    label: <strong>Now</strong>,\r\n  },\r\n};\r\nclass App extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      year: initialYear,\r\n      co2: parseFloat(data[initialYear][\"co2\"]),\r\n      temp: parseFloat(data[initialYear][\"temp\"]),\r\n      arctic: parseFloat(data[initialYear][\"arctic\"]),\r\n      sealevel: parseFloat(data[initialYear][\"sealevel\"]),\r\n      greenland: parseFloat(data[initialYear][\"greenland\"])\r\n    };\r\n    this.setBackgroundColor(initialYear);\r\n    this.onYearChange.bind(this);\r\n    console.log(data)\r\n  }\r\n  setBackgroundColor(value) {\r\n    // h from 200 to 360, \r\n    const bcolor = `hsl(${65 - 70 * parseFloat(data[value][\"temp\"])}, 100%, 75%)`;\r\n    document.getElementsByTagName('body')[0].style.backgroundColor = bcolor\r\n  }\r\n  onYearChange = value => {\r\n    this.setState({\r\n      year: value,\r\n      co2: parseFloat(data[value][\"co2\"]),\r\n      temp: parseFloat(data[value][\"temp\"]),\r\n      arctic: parseFloat(data[value][\"arctic\"]),\r\n      sealevel: parseFloat(data[value][\"sealevel\"]),\r\n      greenland: parseFloat(data[value][\"greenland\"])\r\n    });\r\n    this.setBackgroundColor(value)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n\r\n        <BgParticles co2={this.state.co2}></BgParticles>\r\n        <div\r\n          className=\"slider\">\r\n          <Slider\r\n            min={1993}\r\n            max={2019}\r\n            defaultValue={initialYear}\r\n            value={this.state.year}\r\n            onChange={this.onYearChange}\r\n            marks={marks}\r\n          />\r\n        </div>\r\n        <Row type=\"flex\" justify=\"space-between\" >\r\n          <Col span={4}>\r\n\r\n            <Dashboard temp={this.state.temp} co2={this.state.co2} />\r\n          </Col>\r\n          <Col span={16}>\r\n\r\n            <p className=\"year\">{this.state.year}</p>\r\n          </Col>\r\n          <Col span={4}>\r\n            <div style={{ textAlign: \"right\" }}>\r\n              <GraphDrawer />\r\n              <AboutDrawer />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Ocean sealevel={this.state.sealevel} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}